[{"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\index.js":"1","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\App.js":"2","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js":"3","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js":"4","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js":"5","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js":"6","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js":"7","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js":"8","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\UserList.js":"9"},{"size":220,"mtime":1614111912749,"results":"10","hashOfConfig":"11"},{"size":1208,"mtime":1609681128662,"results":"12","hashOfConfig":"11"},{"size":1210,"mtime":1609638059160,"results":"13","hashOfConfig":"11"},{"size":10790,"mtime":1614129812816,"results":"14","hashOfConfig":"11"},{"size":898,"mtime":1609283555825,"results":"15","hashOfConfig":"11"},{"size":585,"mtime":1609588850324,"results":"16","hashOfConfig":"11"},{"size":8955,"mtime":1614129532354,"results":"17","hashOfConfig":"11"},{"size":943,"mtime":1609632012111,"results":"18","hashOfConfig":"11"},{"size":4889,"mtime":1609685304075,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rnpdt3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\index.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\App.js",[],["40","41"],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js",["42"],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js",["43"],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\UserList.js",["44"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Button, Card, FormControl, InputGroup, Table} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFastBackward, faFastForward, faStepBackward, faStepForward, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Style.css\"\r\n\r\nconst UserList = () => {\r\n\r\n    const [state, setState] = useState({\r\n        users: [],\r\n        currentPage: 1,\r\n        usersPerPage: 5\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                setState({...state, users: data})\r\n            })\r\n    }, [])\r\n\r\n    const {users, currentPage, usersPerPage} = state\r\n\r\n    const lastIndex = currentPage * usersPerPage\r\n    const firstIndex = lastIndex - usersPerPage\r\n    const currentUsers = users.slice(firstIndex, lastIndex)\r\n    const totalPages = users.length / usersPerPage\r\n\r\n    const firstPage = () => {\r\n        setState({...state, currentPage: 1})\r\n    }\r\n\r\n    const prevPage = () => {\r\n        setState({...state, currentPage: currentPage - 1})\r\n    }\r\n\r\n    const changePage = ev => {\r\n        setState({...state, currentPage: ev.target.value})\r\n    }\r\n\r\n    const nextPage = () => {\r\n        setState({...state, currentPage: currentPage + 1})\r\n    }\r\n\r\n    const lastPage = () => {\r\n        setState({...state, currentPage: totalPages})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"bg-dark text-white border border-dark\">\r\n                <Card.Header>\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={faUsers}/>User List\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Address</th>\r\n                            <th>Created</th>\r\n                            <th>Balance</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {users.length === 0 ?\r\n                            <tr align=\"center\">\r\n                                <td colSpan={5}> No Users Available</td>\r\n                            </tr> :\r\n                            currentUsers.map((user, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{user.first}{' '}{user.last}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.address}</td>\r\n                                    <td>{user.created}</td>\r\n                                    <td>{user.balance}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{float: \"left\"}}>\r\n                        Showing Page {currentPage} of {totalPages}\r\n                    </div>\r\n                    <div style={{float: \"right\"}}>\r\n                        <InputGroup size=\"sm\">\r\n                            <InputGroup.Prepend>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 } onClick={firstPage}>\r\n                                    <FontAwesomeIcon icon={faFastBackward} /> First\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 } onClick={prevPage}>\r\n                                    <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                                </Button>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl className={\"bg-dark page-num\"} value={currentPage} onChange={changePage}/>\r\n                            <InputGroup.Append>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages } onClick={nextPage}>\r\n                                    <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages } onClick={lastPage}>\r\n                                    <FontAwesomeIcon icon={faFastForward} /> Last\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":54,"column":8,"nodeType":"51","endLine":54,"endColumn":31,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":78,"column":8,"nodeType":"51","endLine":78,"endColumn":27,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"55","line":22,"column":8,"nodeType":"51","endLine":22,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has a missing dependency: 'getPages'. Either include it or remove the dependency array.",["60"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [initialState, props.match.params.id]",{"range":"68","text":"69"},"Update the dependencies array to be: [currentPage, getPages, sort]",{"range":"70","text":"71"},"Update the dependencies array to be: [state]",{"range":"72","text":"73"},[1583,1606],"[initialState, props.match.params.id]",[2204,2223],"[currentPage, getPages, sort]",[773,775],"[state]"]