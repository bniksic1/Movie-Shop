[{"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\index.js":"1","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\App.js":"2","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\reportWebVitals.js":"3","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js":"4","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js":"5","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js":"6","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js":"7","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js":"8","C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js":"9","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\index.js":"10","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\reportWebVitals.js":"11","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\App.js":"12","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js":"13","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js":"14","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js":"15","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js":"16","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js":"17","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js":"18","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\UserList.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":1048,"mtime":1609287396200,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1095,"mtime":1609285298059,"results":"24","hashOfConfig":"21"},{"size":898,"mtime":1609283555825,"results":"25","hashOfConfig":"21"},{"size":585,"mtime":1609283826405,"results":"26","hashOfConfig":"21"},{"size":8770,"mtime":1609541285787,"results":"27","hashOfConfig":"21"},{"size":3121,"mtime":1609536547649,"results":"28","hashOfConfig":"21"},{"size":832,"mtime":1609540901178,"results":"29","hashOfConfig":"21"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":1208,"mtime":1609680518667,"results":"33","hashOfConfig":"31"},{"size":1210,"mtime":1609638059160,"results":"34","hashOfConfig":"31"},{"size":10520,"mtime":1609639474174,"results":"35","hashOfConfig":"31"},{"size":898,"mtime":1609283555825,"results":"36","hashOfConfig":"31"},{"size":585,"mtime":1609588850324,"results":"37","hashOfConfig":"31"},{"size":7050,"mtime":1609680404269,"results":"38","hashOfConfig":"31"},{"size":943,"mtime":1609632012111,"results":"39","hashOfConfig":"31"},{"size":5059,"mtime":1609645164553,"results":"40","hashOfConfig":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1cjtnbq",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"rnpdt3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\index.js",[],["83","84"],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\App.js",[],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\reportWebVitals.js",[],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js",[],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js",[],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js",[],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js",[],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js",[],"C:\\Users\\benja\\Desktop\\springReact\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\index.js",[],["85","86"],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\reportWebVitals.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\App.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js",["87"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\n\r\nimport \"./Movie.css\"\r\n\r\n\r\nimport {Card, Form, Button, Col} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faList, faPlusSquare, faSave, faUndo, faEdit} from \"@fortawesome/free-solid-svg-icons\";\r\nimport MovieToast from \"./MovieToast\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Movie = (props) => {\r\n    const initialState = {\r\n        id: \"\",\r\n        title: \"\",\r\n        genre: \"\",\r\n        imgCoverLink: \"\",\r\n        dateRelease: \"\",\r\n        description: \"\",\r\n        director: \"\",\r\n        runtime: 0,\r\n        rating: 1\r\n    }\r\n\r\n    const [state, setState] = useState(initialState)\r\n    const [toastShowState, setToastShowState] = useState(false)\r\n\r\n    const movie = {\r\n        title: state.title,\r\n        genre: state.genre,\r\n        imgCoverLink: state.imgCoverLink,\r\n        dateRelease: state.dateRelease,\r\n        description: state.description,\r\n        director: state.director,\r\n        runtime: state.runtime,\r\n        rating: state.rating\r\n    }\r\n\r\n    useEffect(() => {\r\n        const movieId = +props.match.params.id\r\n        axios.get(\"http://localhost:8080/api/movies/\" + movieId)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                if (data != null) {\r\n                    setState(data)\r\n                }\r\n            })\r\n            .catch(() => {\r\n                setState(initialState)\r\n            })\r\n    }, [props.match.params.id])\r\n\r\n    const submitMovie = ev => {\r\n        ev.preventDefault()\r\n        axios.post(\"http://localhost:8080/api/movies\", movie)\r\n            .then(res => {\r\n                if (res.data != null) {\r\n                    setToastShowState(true);\r\n                    setTimeout(() => setToastShowState(false), 3000)\r\n                }\r\n            })\r\n        resetMovie()\r\n    }\r\n\r\n    const updateMovie = ev => {\r\n        ev.preventDefault()\r\n\r\n        const putMovie = {\r\n            id: state.id,\r\n            title: state.title,\r\n            genre: state.genre,\r\n            imgCoverLink: state.imgCoverLink,\r\n            dateRelease: state.dateRelease,\r\n            description: state.description,\r\n            director: state.director,\r\n            runtime: state.runtime,\r\n            rating: state.rating\r\n        }\r\n\r\n        axios.put(\"http://localhost:8080/api/movies/\" + putMovie.id, putMovie)\r\n            .then(res => {\r\n                if (res.data != null) {\r\n                    setToastShowState(true);\r\n                    setTimeout(() => setToastShowState(false), 3000)\r\n                }\r\n            })\r\n        resetMovie()\r\n    }\r\n\r\n    const resetMovie = () => {\r\n        setState(initialState)\r\n    }\r\n\r\n    const movieChangeAction = ev => {\r\n        setState({...state, [ev.target.name]: ev.target.value})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MovieToast\r\n                show={toastShowState}\r\n                message= {\"Movie Saved Successfully.\"}\r\n                type={ \"success\"}\r\n            />\r\n\r\n            <Card className=\"bg-dark text-white border border-dark\">\r\n            <Form onReset={resetMovie} onSubmit={state.id !== \"\" ? updateMovie : submitMovie} id=\"movieFormId\">\r\n                <Card.Header>\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={state.id !== \"\" ? faEdit : faPlusSquare}/>{state.id !== \"\" ? \"Update Movie\" : \"Add New Movie\"}\r\n                </Card.Header>\r\n                <Card.Body>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control required\r\n                                          name=\"title\"\r\n                                          value={state.title}\r\n                                          onChange={movieChangeAction}\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter movie title\"\r\n                                          className=\"bg-dark text-white\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Genre</Form.Label>\r\n                            <Form.Control required\r\n                                          name=\"genre\"\r\n                                          value={state.genre}\r\n                                          onChange={movieChangeAction}\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter movie genre\"\r\n                                          className=\"bg-dark text-white\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Cover Image URL</Form.Label>\r\n                            <Form.Control\r\n                                name=\"imgCoverLink\"\r\n                                value={state.imgCoverLink}\r\n                                onChange={movieChangeAction}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter url ending (.png, .jpg, ...)\"\r\n                                className=\"bg-dark text-white\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Date Release</Form.Label>\r\n                            <Form.Control required\r\n                                          name=\"dateRelease\"\r\n                                          value={state.dateRelease}\r\n                                          onChange={movieChangeAction}\r\n                                          type=\"date\"\r\n                                          className=\"bg-dark text-white\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Movie description</Form.Label>\r\n                            <Form.Control required\r\n                                          name=\"description\"\r\n                                          value={state.description}\r\n                                          onChange={movieChangeAction}\r\n                                          as=\"textarea\"\r\n                                          rows={2}\r\n                                          placeholder=\"Enter short movie description\"\r\n                                          className=\"bg-dark text-white\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Director</Form.Label>\r\n                            <Form.Control required\r\n                                          name=\"director\"\r\n                                          value={state.director}\r\n                                          onChange={movieChangeAction}\r\n                                          type=\"text\"\r\n                                          placeholder=\"Enter movie director\"\r\n                                          className=\"bg-dark text-white\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Runtime (in mins)</Form.Label>\r\n                            <Form.Control required\r\n                                          name=\"runtime\"\r\n                                          value={state.runtime}\r\n                                          onChange={movieChangeAction}\r\n                                          type=\"number\"\r\n                                          placeholder=\"Enter movie runtime\"\r\n                                          className=\"bg-dark text-white\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Rating</Form.Label>\r\n                            <Form.Control required\r\n                                          name=\"rating\"\r\n                                          value={state.rating}\r\n                                          onChange={movieChangeAction}\r\n                                          as=\"select\"\r\n                                          className=\"bg-dark text-white\"\r\n                                          placeholder=\"Enter movie rating\"\r\n                            >\r\n                                <option value={1}>1</option>\r\n                                <option value={2}>2</option>\r\n                                <option value={3}>3</option>\r\n                                <option value={4}>4</option>\r\n                                <option value={5}>5</option>\r\n                                <option value={6}>6</option>\r\n                                <option value={7}>7</option>\r\n                                <option value={8}>8</option>\r\n                                <option value={9}>9</option>\r\n                                <option value={10}>10</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}/>\r\n                    </Form.Row>\r\n\r\n                </Card.Body>\r\n                <Card.Footer style={{textAlign: \"right\"}}>\r\n                    <Button size=\"sm\" variant=\"outline-success\" type=\"submit\" className=\"mr-2\">\r\n                        <FontAwesomeIcon className=\"mr-2\" icon={faSave}/>{state.id !== \"\" ? \"Update\" : \"Save\"}\r\n                    </Button>\r\n                    <Button size=\"sm\" variant=\"outline-info\" type=\"reset\" className=\"mr-2\">\r\n                        <FontAwesomeIcon className=\"mr-2\" icon={faUndo}/>Reset\r\n                    </Button>\r\n                    <Link to={\"/list\"}>\r\n                        <Button size=\"sm\" variant=\"outline-info\" type=\"reset\">\r\n                            <FontAwesomeIcon className=\"mr-2\" icon={faList}/>Movie List\r\n                        </Button>\r\n                    </Link>\r\n                </Card.Footer>\r\n            </Form>\r\n        </Card>\r\n</div>\r\n);\r\n};\r\n\r\nexport default Movie;","C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js",["88"],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js",[],"C:\\Users\\benja\\Desktop\\springReactJS\\src\\main\\webapp\\reactjs\\src\\components\\UserList.js",["89"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {Button, Card, FormControl, InputGroup, Table} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFastBackward, faFastForward, faStepBackward, faStepForward, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst UserList = () => {\r\n\r\n    const [state, setState] = useState({\r\n        users: [],\r\n        currentPage: 1,\r\n        usersPerPage: 5\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                setState({...state, users: data})\r\n            })\r\n    }, [])\r\n\r\n    const {users, currentPage, usersPerPage} = state\r\n\r\n    const lastIndex = currentPage * usersPerPage\r\n    const firstIndex = lastIndex - usersPerPage\r\n    const currentUsers = users.slice(firstIndex, lastIndex)\r\n    const totalPages = users.length / usersPerPage\r\n\r\n    const pageNumCss = {\r\n        width: \"45px\",\r\n        border: \"1px solid #17A2B8\",\r\n        color: \"#17A2B8\",\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\"\r\n    }\r\n\r\n    const firstPage = () => {\r\n        setState({...state, currentPage: 1})\r\n    }\r\n\r\n    const prevPage = () => {\r\n        setState({...state, currentPage: currentPage - 1})\r\n    }\r\n\r\n    const changePage = ev => {\r\n        setState({...state, currentPage: ev.target.value})\r\n    }\r\n\r\n    const nextPage = () => {\r\n        setState({...state, currentPage: currentPage + 1})\r\n    }\r\n\r\n    const lastPage = () => {\r\n        setState({...state, currentPage: totalPages})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"bg-dark text-white border border-dark\">\r\n                <Card.Header>\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={faUsers}/>User List\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Address</th>\r\n                            <th>Created</th>\r\n                            <th>Balance</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {users.length === 0 ?\r\n                            <tr align=\"center\">\r\n                                <td colSpan={5}> No Users Available</td>\r\n                            </tr> :\r\n                            currentUsers.map((user, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{user.first}{' '}{user.last}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.address}</td>\r\n                                    <td>{user.created}</td>\r\n                                    <td>{user.balance}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{float: \"left\"}}>\r\n                        Showing Page {currentPage} of {totalPages}\r\n                    </div>\r\n                    <div style={{float: \"right\"}}>\r\n                        <InputGroup size=\"sm\">\r\n                            <InputGroup.Prepend>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 } onClick={firstPage}>\r\n                                    <FontAwesomeIcon icon={faFastBackward} /> First\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 } onClick={prevPage}>\r\n                                    <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                                </Button>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl style={pageNumCss} className={\"bg-dark\"} value={currentPage} onChange={changePage}/>\r\n                            <InputGroup.Append>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages } onClick={nextPage}>\r\n                                    <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages } onClick={lastPage}>\r\n                                    <FontAwesomeIcon icon={faFastForward} /> Last\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":52,"column":8,"nodeType":"98","endLine":52,"endColumn":31,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":33,"column":8,"nodeType":"98","endLine":33,"endColumn":29,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"100","line":21,"column":8,"nodeType":"98","endLine":21,"endColumn":10,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["106"],["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [initialState, props.match.params.id]",{"range":"114","text":"115"},"Update the dependencies array to be: [state, state.movies.length]",{"range":"116","text":"117"},"Update the dependencies array to be: [state]",{"range":"118","text":"119"},[1505,1528],"[initialState, props.match.params.id]",[934,955],"[state, state.movies.length]",[751,753],"[state]"]