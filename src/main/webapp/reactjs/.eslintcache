[{"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\index.js":"1","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\App.js":"2","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js":"3","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js":"4","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js":"5","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js":"6","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\UserList.js":"7","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js":"8","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js":"9","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\store.js":"10","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\user\\userActions.js":"11","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\rootReducer.js":"12","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\user\\userTypes.js":"13","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\user\\userReducer.js":"14","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\movie\\movieReducer.js":"15","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\movie\\movieTypes.js":"16","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\movie\\movieActions.js":"17"},{"size":338,"mtime":1614562734342,"results":"18","hashOfConfig":"19"},{"size":1238,"mtime":1614562830186,"results":"20","hashOfConfig":"19"},{"size":585,"mtime":1609588850324,"results":"21","hashOfConfig":"19"},{"size":899,"mtime":1614559559816,"results":"22","hashOfConfig":"19"},{"size":1581,"mtime":1614559520900,"results":"23","hashOfConfig":"19"},{"size":11450,"mtime":1614564584915,"results":"24","hashOfConfig":"19"},{"size":5986,"mtime":1614562277525,"results":"25","hashOfConfig":"19"},{"size":9276,"mtime":1614270869355,"results":"26","hashOfConfig":"19"},{"size":943,"mtime":1609632012111,"results":"27","hashOfConfig":"19"},{"size":219,"mtime":1614560313058,"results":"28","hashOfConfig":"19"},{"size":819,"mtime":1614562461012,"results":"29","hashOfConfig":"19"},{"size":261,"mtime":1614563635913,"results":"30","hashOfConfig":"19"},{"size":112,"mtime":1614563483291,"results":"31","hashOfConfig":"19"},{"size":500,"mtime":1614563483315,"results":"32","hashOfConfig":"19"},{"size":505,"mtime":1614564584906,"results":"33","hashOfConfig":"19"},{"size":112,"mtime":1614563591085,"results":"34","hashOfConfig":"19"},{"size":629,"mtime":1614563260388,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kcna9w",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\index.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\App.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\Footer.js",[],["73","74"],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\Welcome.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\NavigationBar.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\Movie.js",["75"],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\UserList.js",["76"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport {connect} from 'react-redux';\r\nimport {fetchUsers} from \"../services/user/userActions\";\r\n\r\nimport {Alert, Button, Card, FormControl, InputGroup, Table} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFastBackward, faFastForward, faStepBackward, faStepForward, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./Style.css\"\r\n\r\nconst UserList = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        currentPage: 1,\r\n        usersPerPage: 5\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\r\n        //     .then(res => res.data)\r\n        //     .then(data => {\r\n        //         setState({...state, users: data})\r\n        //     })\r\n        props.fetchUsers();\r\n    }, [])\r\n\r\n    const {currentPage, usersPerPage} = state\r\n\r\n    const lastIndex = currentPage * usersPerPage\r\n    const firstIndex = lastIndex - usersPerPage\r\n\r\n    const userData = props.userData;\r\n    const users = userData.users;\r\n\r\n    const currentUsers = users.slice(firstIndex, lastIndex)\r\n    const totalPages = users.length / usersPerPage\r\n\r\n    const firstPage = () => {\r\n        setState({...state, currentPage: 1})\r\n    }\r\n\r\n    const prevPage = () => {\r\n        setState({...state, currentPage: currentPage - 1})\r\n    }\r\n\r\n    const changePage = ev => {\r\n        setState({...state, currentPage: ev.target.value})\r\n    }\r\n\r\n    const nextPage = () => {\r\n        setState({...state, currentPage: currentPage + 1})\r\n    }\r\n\r\n    const lastPage = () => {\r\n        setState({...state, currentPage: totalPages})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {userData.error ?\r\n                    <Alert variant=\"danger\">\r\n                        {userData.error}\r\n                    </Alert>\r\n                    :\r\n                    <Card className=\"bg-dark text-white border border-dark\">\r\n                        <Card.Header>\r\n                            <FontAwesomeIcon className=\"mr-2\" icon={faUsers}/>User List\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Address</th>\r\n                                    <th>Created</th>\r\n                                    <th>Balance</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {users.length === 0 ?\r\n                                    <tr align=\"center\">\r\n                                        <td colSpan={5}> No Users Available</td>\r\n                                    </tr> :\r\n                                    currentUsers.map((user, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>{user.first}{' '}{user.last}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.address}</td>\r\n                                            <td>{user.created}</td>\r\n                                            <td>{user.balance}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <div style={{float: \"left\"}}>\r\n                                Showing Page {currentPage} of {totalPages}\r\n                            </div>\r\n                            <div style={{float: \"right\"}}>\r\n                                <InputGroup size=\"sm\">\r\n                                    <InputGroup.Prepend>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 } onClick={firstPage}>\r\n                                            <FontAwesomeIcon icon={faFastBackward} /> First\r\n                                        </Button>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 } onClick={prevPage}>\r\n                                            <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                                        </Button>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl className={\"bg-dark page-num\"} value={currentPage} onChange={changePage}/>\r\n                                    <InputGroup.Append>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages } onClick={nextPage}>\r\n                                            <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                        </Button>\r\n                                        <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages } onClick={lastPage}>\r\n                                            <FontAwesomeIcon icon={faFastForward} /> Last\r\n                                        </Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </div>\r\n                        </Card.Footer>\r\n                    </Card>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        userData: state.user\r\n    }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        fetchUsers: () => dispatch(fetchUsers())\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\MovieList.js",["77"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport {Button, ButtonGroup, Card, FormControl, Image, InputGroup, Table} from \"react-bootstrap\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {\r\n    faList,\r\n    faEdit,\r\n    faTrash,\r\n    faFastBackward,\r\n    faStepBackward,\r\n    faStepForward,\r\n    faFastForward\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\nimport MovieToast from \"./MovieToast\";\r\nimport \"./Style.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst MovieList = () => {\r\n    const [state, setState] = useState({\r\n        movies: [],\r\n        currentPage: 1,\r\n        moviesPerPage: 5,\r\n        totalPages: 1,\r\n        sort: {\r\n            sortedBy: \"title\",\r\n            sortedAsc: true\r\n        }\r\n    })\r\n\r\n    const initialSortArrow = {\r\n        title: true,\r\n        genre: false,\r\n        rating: false,\r\n        director: false,\r\n        dateRelease: false,\r\n        runtime: false\r\n    }\r\n    const [sortArrow, setSortArrow] = useState(initialSortArrow)\r\n\r\n    const {movies, currentPage, moviesPerPage, sort, totalPages} = state\r\n    const [showToastState, setShowToastState] = useState(false)\r\n\r\n    const getPages = () => {\r\n        let searchQuery = new URLSearchParams(window.location.search).get('search')\r\n        if(searchQuery == null)\r\n            searchQuery = \"\"\r\n\r\n        let sortDir = sort.sortedAsc ? \"asc\" : \"desc\"\r\n\r\n        axios.get(\"http://localhost:8080/api/movies/options?\" +\r\n                \"search=\" +  searchQuery + \"&\" +\r\n                \"page=\" + currentPage + \"&\" +\r\n                \"size=\" + moviesPerPage + \"&\" +\r\n                \"sort=\" + sort.sortedBy + \",\" + sortDir)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                setState({...state,\r\n                    movies: data.content,\r\n                    totalPages: data.totalPages\r\n                })\r\n            })\r\n    }\r\n\r\n    const setSortData = async (sortBy) => {\r\n        initialSortArrow[\"title\"] = false\r\n        initialSortArrow[sortBy] = true\r\n        setSortArrow(initialSortArrow)\r\n        // initialSortArrow[sortBy] = false\r\n    }\r\n\r\n    const sortData = (sortedBy) => {\r\n        setSortData(sortedBy).then(() => {\r\n            setState({\r\n                ...state,\r\n                sort:{\r\n                    sortedBy: sortedBy,\r\n                    sortedAsc: !sort.sortedAsc\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPages()\r\n    }, [currentPage, sort, window.location.search])\r\n\r\n    const onClickDeleteMovie = (movieId) => {\r\n        axios.delete(\"http://localhost:8080/api/movies/\" + movieId)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                if(data != null) {\r\n                    setShowToastState(true);\r\n                    setTimeout(() => setShowToastState(false), 3000)\r\n                    getPages()\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const firstPage = () => {\r\n        setState({...state, currentPage: 1})\r\n    }\r\n\r\n    const prevPage = () => {\r\n        setState({...state, currentPage: currentPage - 1})\r\n    }\r\n\r\n    const changePage = ev => {\r\n        if(ev.target.value.match(/\\D/g) != null) {\r\n            ev.target.value.replace(/\\D/g, \"\")\r\n            return\r\n        }\r\n        setState({...state, currentPage: ev.target.value})\r\n    }\r\n\r\n    const nextPage = () => {\r\n        setState({...state, currentPage: state.currentPage + 1})\r\n    }\r\n\r\n    const lastPage = () => {\r\n        setState({...state, currentPage: totalPages})\r\n    }\r\n\r\n    const sortArrowDirection = sort.sortedAsc ? \"arrow-down\" : \"arrow-up\"\r\n\r\n    return (\r\n        <div>\r\n            <MovieToast\r\n                show={showToastState}\r\n                message={ \"Movie Deleted Successfully.\"}\r\n                type={ \"danger\"}\r\n            />\r\n            <Card className=\"bg-dark text-white border border-dark\">\r\n                <Card.Header>\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={faList}/>Movie List\r\n\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th onClick={() => sortData(\"title\")}>Title<div className={`arrow ${sortArrow.title ? \"enable-arrow\" : \"disable-arrow\"} ${sortArrowDirection}`}/></th>\r\n                            <th onClick={() => sortData(\"genre\")}>Genre<div className={`arrow ${sortArrow.genre ? \"enable-arrow\" : \"disable-arrow\"} ${sortArrowDirection}`}/></th>\r\n                            <th onClick={() => sortData(\"rating\")}>Rating<div className={`arrow ${sortArrow.rating ? \"enable-arrow\" : \"disable-arrow\"} ${sortArrowDirection}`}/></th>\r\n                            <th onClick={() => sortData(\"director\")}>Director<div className={`arrow ${sortArrow.director ? \"enable-arrow\" : \"disable-arrow\"} ${sortArrowDirection}`}/></th>\r\n                            <th onClick={() => sortData(\"dateRelease\")}>Date Release<div className={`arrow ${sortArrow.dateRelease ? \"enable-arrow\" : \"disable-arrow\"} ${sortArrowDirection}`}/></th>\r\n                            <th onClick={() => sortData(\"runtime\")}>Runtime<div className={`arrow ${sortArrow.runtime ? \"enable-arrow\" : \"disable-arrow\"} ${sortArrowDirection}`}/></th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            state.length === 0 ?\r\n                                <tr><td colSpan={7}>No movies available.</td></tr>\r\n                                :\r\n                                movies.map(movie => (\r\n                                    <tr key={movie.id}>\r\n                                        <td>\r\n                                            <Image\r\n                                                src={movie.imgCoverLink}\r\n                                                roundedCircle\r\n                                                width={25}\r\n                                                height={25}\r\n                                                className=\"mr-2\"\r\n                                            />\r\n                                            {movie.title}\r\n                                        </td>\r\n                                        <td>{movie.genre}</td>\r\n                                        <td>{movie.rating}</td>\r\n                                        <td>{movie.director}</td>\r\n                                        <td>{movie.dateRelease}</td>\r\n                                        <td>{movie.runtime}</td>\r\n                                        <td>\r\n                                            <ButtonGroup>\r\n                                                <Link to={\"edit/\" + movie.id} className=\"btn btn-sm btn-outline-primary mr-2\"><FontAwesomeIcon icon={faEdit} /></Link>\r\n                                                <Button size=\"sm\" variant=\"outline-danger\" onClick={onClickDeleteMovie.bind(this, movie.id)}><FontAwesomeIcon icon={faTrash} /></Button>\r\n                                            </ButtonGroup>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{float: \"left\"}}>\r\n                        Showing Page {currentPage} of {totalPages}\r\n                    </div>\r\n                    <div style={{float: \"right\"}}>\r\n                        <InputGroup size=\"sm\">\r\n                            <InputGroup.Prepend>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1} onClick={firstPage}>\r\n                                    <FontAwesomeIcon icon={faFastBackward} /> First\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1} onClick={prevPage}>\r\n                                    <FontAwesomeIcon icon={faStepBackward} /> Prev\r\n                                </Button>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl className={\"bg-dark page-num\"} value={currentPage} onChange={changePage}/>\r\n                            <InputGroup.Append>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages} onClick={nextPage}>\r\n                                    <FontAwesomeIcon icon={faStepForward} /> Next\r\n                                </Button>\r\n                                <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === totalPages} onClick={lastPage}>\r\n                                    <FontAwesomeIcon icon={faFastForward} /> Last\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieList;","C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\components\\MovieToast.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\store.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\user\\userActions.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\rootReducer.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\user\\userTypes.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\user\\userReducer.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\movie\\movieReducer.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\movie\\movieTypes.js",[],"C:\\Users\\benja\\Projects\\MovieShop\\src\\main\\webapp\\reactjs\\src\\services\\movie\\movieActions.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":56,"column":8,"nodeType":"84","endLine":56,"endColumn":31,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":28,"column":8,"nodeType":"84","endLine":28,"endColumn":10,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":86,"column":8,"nodeType":"84","endLine":86,"endColumn":51,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["93"],"React Hook useEffect has a missing dependency: 'getPages'. Either include it or remove the dependency array. Outer scope values like 'window.location.search' aren't valid dependencies because mutating them doesn't re-render the component.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [initialState, props.match.params.id]",{"range":"101","text":"102"},"Update the dependencies array to be: [props]",{"range":"103","text":"104"},"Update the dependencies array to be: [currentPage, getPages, sort]",{"range":"105","text":"106"},[1680,1703],"[initialState, props.match.params.id]",[888,890],"[props]",[2501,2544],"[currentPage, getPages, sort]"]